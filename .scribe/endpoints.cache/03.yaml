## Autogenerated by Scribe. DO NOT MODIFY.

name: Tutors
description: |-

  APIs for discovering and viewing tutor profiles
endpoints:
  -
    httpMethods:
      - GET
    uri: api/tutors
    metadata:
      groupName: Tutors
      groupDescription: |-

        APIs for discovering and viewing tutor profiles
      subgroup: ''
      subgroupDescription: ''
      title: 'List All Tutors'
      description: 'Get a list of all available tutors with optional filters.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      search:
        name: search
        description: 'Search tutors by name or bio.'
        required: false
        example: mathematics
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      category_id:
        name: category_id
        description: 'Filter tutors by teaching category.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      available:
        name: available
        description: 'Filter by availability status (available/busy).'
        required: false
        example: available
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      include:
        name: include
        description: |-
          Specify which relationships to include in the response.
                      Multiple relationships can be comma-separated.
                      Available: tutorProfile, categories, qualifications, applications
        required: false
        example: 'include=tutorProfile,categories'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      search: mathematics
      category_id: 1
      available: available
      include: 'include=tutorProfile,categories'
    bodyParameters:
      search:
        name: search
        description: 'Must be at least 3 characters.'
        required: false
        example: qgynlomaitvotcjolmgjbmfiklbswdlavbuuaeyrpfqplbqjqzqqrlmrjbnpxrodzxsompyuggnnfeotymwx
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      category_id:
        name: category_id
        description: 'The <code>id</code> of an existing record in the categories table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      available:
        name: available
        description: ''
        required: false
        example: busy
        type: string
        enumValues:
          - available
          - busy
        exampleWasSpecified: false
        nullable: false
        custom: []
      include:
        name: include
        description: ''
        required: false
        example: dignissimos
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      search: qgynlomaitvotcjolmgjbmfiklbswdlavbuuaeyrpfqplbqjqzqqrlmrjbnpxrodzxsompyuggnnfeotymwx
      available: busy
      include: dignissimos
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [
             {
               "id": 1,
               "name": "John Doe",
               "email": "john@example.com",
               "phone_number": "+254700000000",
               "whatsapp_number": "+254700000000",
               "user_type": "tutor",
               "location": "Nairobi",
               "profile_image": "path/to/image.jpg"
             }
           ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tutors/{id}'
    metadata:
      groupName: Tutors
      groupDescription: |-

        APIs for discovering and viewing tutor profiles
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Tutor Details'
      description: 'Get detailed public profile information of a specific tutor.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tutor.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      include:
        name: include
        description: |-
          Specify which relationships to include in the response.
                      Multiple relationships can be comma-separated.
                      Available: tutorProfile, categories, qualifications, applications
        required: false
        example: 'include=tutorProfile,categories'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      include: 'include=tutorProfile,categories'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": {
             "id": 1,
             "name": "John Doe",
             "email": "john@example.com",
             "phone_number": "+254700000000",
             "whatsapp_number": "+254700000000",
             "user_type": "tutor",
             "location": "Nairobi",
             "profile_image": "path/to/image.jpg"
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
