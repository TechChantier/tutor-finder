## Autogenerated by Scribe. DO NOT MODIFY.

name: Gigs
description: |-

  APIs for managing learning gigs
endpoints:
  -
    httpMethods:
      - GET
    uri: api/gigs
    metadata:
      groupName: Gigs
      groupDescription: |-

        APIs for managing learning gigs
      subgroup: ''
      subgroupDescription: ''
      title: 'List All Gigs'
      description: 'Get a list of all available learning gigs. By default, pending gigs are excluded.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      include:
        name: include
        description: |-
          Specify which relationships to include in the response.
                      Multiple relationships can be comma-separated.
                      Available relationships: learner, category, applications
        required: false
        example: voluptate
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      search:
        name: search
        description: 'Search in gig title and description'
        required: false
        example: sint
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      price:
        name: price
        description: 'Filter by price range (format: 1000-5000)'
        required: false
        example: molestiae
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      budget_period:
        name: budget_period
        description: 'Filter by budget period (hourly/daily/weekly/monthly)'
        required: false
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      category_id:
        name: category_id
        description: 'Filter gigs by category'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'Filter by gig status (pending/open/in_progress/completed/cancelled)'
        required: false
        example: pariatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      learner_id:
        name: learner_id
        description: 'Filter gigs by the learner who created them'
        required: false
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      include_pending:
        name: include_pending
        description: 'Include pending gigs (default: false)'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      include: voluptate
      search: sint
      price: molestiae
      budget_period: vel
      category_id: 16
      status: pariatur
      learner_id: 8
      include_pending: false
    bodyParameters:
      search:
        name: search
        description: 'Must be at least 3 characters.'
        required: false
        example: xujxeneclhwqcsulrznhcazcnckffeltogcqrnuswufvalylvernftfsuipacpk
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      price:
        name: price
        description: 'Must match the regex /^\d+-\d+$/.'
        required: false
        example: 34725-1
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      budget_period:
        name: budget_period
        description: ''
        required: false
        example: monthly
        type: string
        enumValues:
          - hourly
          - daily
          - weekly
          - monthly
        exampleWasSpecified: false
        nullable: false
        custom: []
      category_id:
        name: category_id
        description: 'The <code>id</code> of an existing record in the categories table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: completed
        type: string
        enumValues:
          - pending
          - open
          - in_progress
          - completed
          - cancelled
        exampleWasSpecified: false
        nullable: false
        custom: []
      learner_id:
        name: learner_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      include_pending:
        name: include_pending
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      search: xujxeneclhwqcsulrznhcazcnckffeltogcqrnuswufvalylvernftfsuipacpk
      price: 34725-1
      budget_period: monthly
      status: completed
      include_pending: true
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [
             {
               "id": 1,
               "title": "Need Math Tutor",
               "description": "Looking for calculus tutor",
               "budget": 5000,
               "budget_period": "monthly",
               "location": "Online",
               "status": "open",
               "learner": {
                 "id": 1,
                 "name": "John Student"
               },
               "category": {
                 "id": 1,
                 "name": "Mathematics"
               }
             }
           ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/gigs/{gig_id}'
    metadata:
      groupName: Gigs
      groupDescription: |-

        APIs for managing learning gigs
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Gig Details'
      description: 'Get detailed information about a specific gig.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      gig_id:
        name: gig_id
        description: 'The ID of the gig.'
        required: true
        example: 46
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      gig:
        name: gig
        description: 'The ID of the gig'
        required: true
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      gig_id: 46
      gig: 20
    queryParameters:
      include:
        name: include
        description: 'Relationships to include (learner,category,applications)'
        required: false
        example: dolor
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      include: dolor
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": {
             "id": 1,
             "title": "Need Math Tutor",
             "description": "Looking for calculus tutor",
             "budget": 5000,
             "budget_period": "monthly",
             "location": "Online",
             "status": "pending",
             "learner": {
               "id": 1,
               "name": "John Student"
             }
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/gigs
    metadata:
      groupName: Gigs
      groupDescription: |-

        APIs for managing learning gigs
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Gig'
      description: |-
        Create a new gig in pending status (Learner only). The gig will not be visible to others
        until it is published.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      category_id:
        name: category_id
        description: 'Valid category ID'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      title:
        name: title
        description: 'Gig title min:10 characters'
        required: true
        example: cupiditate
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Detailed description min:50 characters'
        required: true
        example: 'Corrupti rem mollitia molestiae qui cupiditate ab expedita.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      budget_period:
        name: budget_period
        description: 'Budget time period (hourly/daily/weekly/monthly)'
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      budget:
        name: budget
        description: 'Minimum amount 1000'
        required: true
        example: molestiae
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      location:
        name: location
        description: 'Preferred learning location'
        required: true
        example: iure
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'Status of the gig (defaults to pending)'
        required: false
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      category_id: 16
      title: cupiditate
      description: 'Corrupti rem mollitia molestiae qui cupiditate ab expedita.'
      budget_period: est
      budget: molestiae
      location: iure
      status: vel
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "data": {
             "id": 1,
             "title": "Need Math Tutor",
             "description": "Looking for calculus tutor...",
             "budget": 5000,
             "budget_period": "monthly",
             "location": "Online",
             "status": "pending"
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/gigs/{gig_id}'
    metadata:
      groupName: Gigs
      groupDescription: |-

        APIs for managing learning gigs
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Gig'
      description: 'Update an existing gig (Gig owner only).'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      gig_id:
        name: gig_id
        description: 'The ID of the gig.'
        required: true
        example: 46
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      gig:
        name: gig
        description: 'The ID of the gig'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      gig_id: 46
      gig: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      category_id:
        name: category_id
        description: 'Valid category ID'
        required: true
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      title:
        name: title
        description: 'Gig title min:10 characters'
        required: true
        example: esse
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Detailed description min:50 characters'
        required: true
        example: 'Ducimus debitis unde iste dignissimos culpa rerum quo deleniti.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      budget_period:
        name: budget_period
        description: 'Budget time period (hourly/daily/weekly/monthly)'
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      budget:
        name: budget
        description: 'Minimum amount 1000'
        required: true
        example: est
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      location:
        name: location
        description: 'Preferred learning location'
        required: true
        example: praesentium
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'Status of the gig (pending/open/completed/cancelled)'
        required: false
        example: vitae
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      category_id: 9
      title: esse
      description: 'Ducimus debitis unde iste dignissimos culpa rerum quo deleniti.'
      budget_period: aut
      budget: est
      location: praesentium
      status: vitae
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": {
             "id": 1,
             "title": "Updated Math Tutor",
             "description": "Updated description...",
             "budget": 6000,
             "budget_period": "weekly",
             "location": "Online",
             "status": "pending"
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/gigs/{gig_id}'
    metadata:
      groupName: Gigs
      groupDescription: |-

        APIs for managing learning gigs
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Gig'
      description: 'Delete a gig (Gig owner only).'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      gig_id:
        name: gig_id
        description: 'The ID of the gig.'
        required: true
        example: 46
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      gig:
        name: gig
        description: 'The ID of the gig'
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      gig_id: 46
      gig: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/gigs/{gig_id}/publish'
    metadata:
      groupName: Gigs
      groupDescription: |-

        APIs for managing learning gigs
      subgroup: ''
      subgroupDescription: ''
      title: 'Publish Gig'
      description: "Change a gig's status from pending to open, making it publicly available (Gig owner only)."
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      gig_id:
        name: gig_id
        description: 'The ID of the gig.'
        required: true
        example: 46
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      gig:
        name: gig
        description: 'The ID of the gig'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      gig_id: 46
      gig: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": {
             "id": 1,
             "title": "Need Math Tutor",
             "description": "Looking for calculus tutor...",
             "budget": 5000,
             "budget_period": "monthly",
             "location": "Online",
             "status": "open"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
           "message": "Only pending gigs can be published"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
           "message": "You are not authorized to publish this gig"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/gigs/{gig_id}/unpublish'
    metadata:
      groupName: Gigs
      groupDescription: |-

        APIs for managing learning gigs
      subgroup: ''
      subgroupDescription: ''
      title: 'Unpublish Gig'
      description: "Change a gig's status from open to pending, making it private (Gig owner only)."
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      gig_id:
        name: gig_id
        description: 'The ID of the gig.'
        required: true
        example: 46
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      gig:
        name: gig
        description: 'The ID of the gig'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      gig_id: 46
      gig: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": {
             "id": 1,
             "title": "Need Math Tutor",
             "description": "Looking for calculus tutor...",
             "budget": 5000,
             "budget_period": "monthly",
             "location": "Online",
             "status": "pending"
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
