name: Authentication
description: |-

  APIs for managing athentication
endpoints:
  -
    httpMethods:
      - POST
    uri: api/signup
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for managing athentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Register User'
      description: 'Create a new user account.'
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "User's full name"
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: "User's email address must be unique"
        required: true
        example: tnitzsche@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Minimum of 8 characters'
        required: true
        example: '^&~#yy(z8M2'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      phone_number:
        name: phone_number
        description: 'Max 12 characters'
        required: true
        example: praesentium
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      whatsapp_number:
        name: whatsapp_number
        description: 'Max 12 characters'
        required: true
        example: error
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_type:
        name: user_type
        description: "Either 'tutor' or 'learner'"
        required: true
        example: dolor
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      location:
        name: location
        description: "User's location"
        required: true
        example: odit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      profile_image:
        name: profile_image
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Must match password'
        required: true
        example: necessitatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: qui
      email: tnitzsche@example.com
      password: '^&~#yy(z8M2'
      phone_number: praesentium
      whatsapp_number: error
      user_type: dolor
      location: odit
      password_confirmation: necessitatibus
    fileParameters:
      profile_image: null
    responses:
      -
        status: 201
        content: |-
          {
           "message": "User registered successfully",
           "user": {
             "id": 1,
             "name": "John Doe",
             "email": "john@example.com",
             "phone_number": "1234567890",
             "whatsapp_number": "1234567890",
             "user_type": "tutor",
             "location": "New York",
             "tutor_profile": {
               "verification_status": "pending",
               "availability_status": "available"
             }
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "message": "The email has already been taken"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for managing athentication
      subgroup: ''
      subgroupDescription: ''
      title: 'User Login'
      description: 'Authenticate a user and get access token.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "User's email address"
        required: true
        example: fkassulke@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: "User's password min:6"
        required: true
        example: 7.(2^QyR
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: fkassulke@example.org
      password: 7.(2^QyR
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "token": "1|example-token-string",
           "authenticated user": {
             "id": 1,
             "name": "John Doe",
             "email": "john@example.com"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "message": "The provided credentials are incorrect"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for managing athentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout User'
      description: "Invalidate user's access token."
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "You are Logged out Successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
